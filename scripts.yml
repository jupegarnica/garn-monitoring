# deno install -qA -n vr https://deno.land/x/velociraptor@1.0.0-beta.16/cli.ts
# allow:
#   - net
#   - env
#   - read
#   - write


#  pagic -h || deno install --unstable --allow-read --allow-write --allow-net --allow-run --name=pagic https://deno.land/x/pagic/mod.ts
scripts:
  web:
    cmd: pagic build --serve --watch
    watch: false
  update:
    cmd: deno run -A https://deno.land/x/udd@0.4.0/main.ts deps.ts
    watch: false
  start:
    cmd: deno run -A --unstable app.ts --config monitor.config.yaml
    watch: true
  once: deno run -A --unstable app.ts --config monitor.config.yaml --once
  format: deno fmt *.ts
  lint: deno lint *.ts
  json: deno run --allow-read --allow-net test/json.server.ts
  server:
    cmd: deno run -A test/oak.server.ts
    unstable: true
    # watch: true
    env:
      DEBUG: true
  install: deno install -f -A --unstable -n monitor app.ts
  # install: denon -v || deno install -qAf --unstable https://deno.land/x/denon@2.4.4/denon.ts
  # test:
  #   desc: server watch mode
  #   cmd: |
  #     deno run -A test/oak.server.ts &
  #     sleep 5
  #     denon run install
  #     denon run -A --unstable app.ts --once
  #   env:
  #     DEBUG: true
  #     # DEBUG_EMAIL: true
  #   # watch: true
  #   unstable: true
  dev:
    desc: watch mode
    cmd: deno run -A --unstable app.ts --config monitor.config.yaml --once
    watch: true
    # unstable: true
    env:
      # DEBUG_EMAIL: true
      DEBUG: true

watcher:
  # The number of milliseconds after the last change.
  interval: 350
  # The file extensions that it will scan for.
  exts: ['js', 'jsx', 'ts', 'tsx', 'yaml', 'yml']
  # The globs that it will scan for.
  match: ['**/*.*']
  # The globs that it will not scan for.
  skip: ['*/.git/*']
  # Use the legacy file monitoring algorithm. (walking)
  legacy: false
